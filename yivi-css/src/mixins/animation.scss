/*
Animation

These are some really simple mixins to write clean and DRY animations and
leave the annoying vendor specific prefixing to the mixin.

Styleguide Mixins.Animation

animation($animation)

A mixin for vendor prefixing the `animation` declaration

```css
.complicated-element {
  @include animation(animation-name 2s infinite linear);
}
```

Styleguide Mixins.Animation.animation
*/

@mixin animation($animation) {
  -ms-animation: $animation;
  -webkit-animation: $animation;
  animation: $animation;
}

/*
animation-delay($delay)

A mixin for vendor prefixing the `animation-delay` declaration

```css
.complicated-element {
  @include animation-delay(2s);
}
```

Styleguide Mixins.Animation.animation-delay
*/

@mixin animation-delay($delay) {
  -ms-animation-delay: $delay;
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
}

/*
keyframes($name) { ... }

A mixin for vendor prefixing the `@keyframes` declaration

```css
@include keyframes(animation-name) {
    // Your animation here
}
```

Styleguide Mixins.Animation.keyframes
*/

@mixin keyframes($name) {
  @-ms-keyframes #{$name} {
    @content;
  }
  @-webkit-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

/*
transition($props);

A mixin for vendor prefixing transitions

```css
.complicated-element {
  @include transition(transform 0.2s ease-in-out);
}
```

Styleguide Mixins.Animation.transition
*/

@mixin transition($props) {
  -webkit-transition: -webkit-#{$props};
  -webkit-transition: $props;
  transition: $props;
}
